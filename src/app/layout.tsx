// layout.tsx
"use client";
import React, { useState, useEffect } from "react";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import ChatWidget from "./ChatWidget"; // Adjust the import path if necessary
import Image from "next/image";
import { Sun, Moon } from "lucide-react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isDarkMode, setIsDarkMode] = useState(true);
  const [showWidget, setShowWidget] = useState(false);

  // Dark mode toggle effect
  useEffect(() => {
    if (isDarkMode) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  }, [isDarkMode]);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased relative`}
      >
        {children}

        {/* Dark Mode Toggle */}
        {/* <button
          onClick={() => setIsDarkMode(!isDarkMode)}
          className={`fixed bottom-5 left-5 flex items-center gap-2 px-4 py-2 rounded-lg transition-colors ${
            isDarkMode
              ? "bg-gray-700 text-gray-200 hover:bg-gray-600"
              : "bg-gray-200 text-gray-800 hover:bg-gray-300"
          }`}
        >
          {isDarkMode ? <Sun size={20} /> : <Moon size={20} />}
          {isDarkMode ? "Light Mode" : "Dark Mode"}
        </button> */}

        {/* Widget Toggle Button */}
        {!showWidget && (
          <button
            onClick={() => setShowWidget(true)}
            className="fixed bottom-5 right-5 w-16 h-16 rounded-full shadow-lg bg-blue-500 hover:bg-blue-600 flex items-center justify-center"
          >
            <Image
              src="/avoca_ai_logo.jpeg"
              alt="Chat Widget"
              width={48}
              height={48}
              className="rounded-full"
            />
          </button>
        )}

        {/* Chat Widget */}
        {showWidget && (
          <ChatWidget
            isDarkMode={isDarkMode}
            onClose={() => setShowWidget(false)}
          />
        )}
      </body>
    </html>
  );
}
